For the list of options use --help

For stdin mode (-i | --stdin) the input is in json. Other keys except -c and -d are ignored.
Check if answer's rc element (return code) is non-zero as an indication of error.
NOTE: json commands SHOULD be one-liner.
If you want to send the message with line breaks use "mpublish" command (see below)

Authentication:
set user name. Overrides .ini:
	{ "user":"<username>", "password":"optional" }

Special commands:
	{ "cmd":"<command>" }
	exit - end session

Publish:
	{ "publish":"<message>", "topics":[ "<topic1>",... ] }
	add optional "retain":true to make topic retained
	"qos":qos - optional qos type
	{ "mpublish":"stop tag" ...the rest is the same as for "publish" } - for multiline messages: the string is a stop-word.
		You post you message beginning after the json command line.
		The message stops when "stop tag" encountered within the line.
		It is recommennded to use random UUID to ensure that this will be unique.
	answers:
		OK: { "message":"published", "rc":0, "id":<message id>, "topic":"<topic>", "payload":"<payload>" }

Subscribe to topic(s):
	{ "subscribe":[ "<topic1>"... ] }
	answers:
		{ "message":"subscribed", "rc":0, "topic":"<topic>" } - OK
		{ "message":"subscribe failed", "rc":<return code>, "topic":"<topic>" } - some error occurred

		{ "subscription":"<topic>", "message":"message payload>" } - new message arrived

UNsubscribe from topic(s):
	{ "unsubscribe":[ "<topic1>"... ] }
	answers:
		{ "message":"unsubsribed", "rc":0 }
		{ "message":"unsubsribe failed", "rc":<return code> }

Common answers (mostly problems):
	{ "message":"untracked message callback detected", rc:<return code>, "id":<message id> }
		used in async confirmation mode, but it is off now
	{ "message":"invalid json", "rc":<return code> }
	{ "message":"unknown command", "rc":<return code> }
